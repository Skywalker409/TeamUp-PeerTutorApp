<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.tamutheo.databaseAPI.tutorReview.TutorReviewMapper">
    <resultMap id="TutorReviewResultMap" type="xyz.tamutheo.databaseAPI.tutorReview.TutorReviewModel">
        <result property="appointmentId" column="appointment_id"/>
        <result property="numberStars" column="number_stars"/>
        <result property="reviewText" column="review_text"/>
        <result property="reviewDateValue" column="review_date"/>
        <result property="tuteeEmail" column="tutee_email"/>
        <result property="tutorEmail" column="tutor_email"/>
        <result property="tuteeFirstName" column="tutee_first_name"/>
        <result property="tuteeLastName" column="tutee_last_name"/>
        <result property="tuteeSeniority" column="tutee_seniority"/>
        <result property="tuteeMajorAbbreviation" column="tutee_major_abbreviation"/>
    </resultMap>

    <resultMap id="AppointmentResultMap" type="xyz.tamutheo.databaseAPI.appointment.AppointmentModel">
        <result property="appointmentId" column="appointment_id" />
        <result property="startDateTimeValue" column="start_date_time_value" />
        <result property="endDateTimeValue" column="end_date_time_value" />
        <result property="appointmentSizeName" column="appointment_size_name" />
        <result property="cancellationReason" column="cancellation_reason" />
        <result property="isCancelled" column="is_cancelled" />
        <result property="isConfirmed" column="is_confirmed" />
        <result property="locationName" column="location_name" />
        <result property="tuteeEmail" column="tutee_email" />
        <result property="tuteeFirstName" column="tutee_first_name" />
        <result property="tuteeLastName" column="tutee_last_name" />
        <result property="tuteePhoneNumber" column="tutee_phone_number" />
        <result property="tutorEmail" column="tutor_email" />
        <result property="tutorFirstName" column="tutor_first_name" />
        <result property="tutorLastName" column="tutor_last_name" />
        <result property="tutorPhoneNumber" column="tutor_phone_number" />
    </resultMap>

    <insert id="create" parameterType="xyz.tamutheo.databaseAPI.tutorReview.TutorReviewModel">
        INSERT INTO tutor_review
        (appointment_id, number_stars, review_text, tutee_email, tutor_email)
        VALUES
        (#{appointmentId}, #{numberStars}, #{reviewText}, #{tuteeEmail}, #{tutorEmail})
    </insert>
    <select id="read" resultMap="TutorReviewResultMap">
        SELECT
            r.appointment_id,
            r.review_text,
            r.review_date,
            r.tutor_email,
            r.number_stars,
            r.tutee_email,
            t.first_name AS tutee_first_name,
            t.last_name AS tutee_last_name,
            t.seniority_name AS tutee_seniority,
            t.major_abbreviation AS tutee_major_abbreviation
        FROM tutor_review AS r
        JOIN tutee AS t ON r.tutee_email = t.email
        <where>
            <if test="appointmentIdEquals != null">
                AND r.appointment_id = #{appointmentIdEquals}
            </if>
            <if test="numberStarsGreaterThanOrEquals != null">
                AND r.number_stars &gt;= #{numberStarsGreaterThanOrEquals}
            </if>
            <if test="numberStarsLessThanOrEquals != null">
                AND r.number_stars &lt;= #{numberStarsLessThanOrEquals}
            </if>
            <if test="reviewTextContains != null">
                <bind name="reviewTextContainsPattern" value = "'%' + reviewTextContains + '%'" />
                AND LOWER(r.review_text) LIKE LOWER(#{reviewTextContainsPattern})
            </if>
            <if test="tuteeEmailContains != null">
                <bind name="tuteeEmailContainsPattern" value = "'%' + tuteeEmailContains + '%'" />
                AND LOWER(r.tutee_email) LIKE LOWER(#{tuteeEmailContainsPattern})
            </if>
            <if test="tutorEmailContains != null">
                <bind name="tutorEmailContainsPattern" value = "'%' + tutorEmailContains + '%'" />
                AND LOWER(r.tutor_email) LIKE LOWER(#{tutorEmailContainsPattern})
            </if>
        </where>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <if test="limit != null and offset != null">
            OFFSET #{offset}
        </if>
    </select>
    <update id="update" parameterType="map">
        UPDATE tutor_review
        <set>
            <if test="tutorReviewModelNew.numberStars != null">
                number_stars = #{tutorReviewModelNew.numberStars},
            </if>
            <if test="tutorReviewModelNew.reviewText != null">
                review_text = #{tutorReviewModelNew.reviewText},
            </if>
        </set>
        <where>
            <if test="tutorReviewModelOld.appointmentId != null">
                AND appointment_id = #{tutorReviewModelOld.appointmentId}
            </if>
            <if test="tutorReviewModelOld.tuteeEmail != null">
                AND tutee_email = #{tutorReviewModelOld.tuteeEmail}
            </if>
            <if test="tutorReviewModelOld.tutorEmail != null">
                AND tutor_email = #{tutorReviewModelOld.tutorEmail}
            </if>
        </where>
    </update>
    <delete id="delete" parameterType="xyz.tamutheo.databaseAPI.tutorReview.TutorReviewModel">
        DELETE FROM tutor_review
        <where>
            <if test="appointmentId != null">
                AND appointment_id = #{appointmentId}
            </if>
            <if test="tuteeEmail != null">
                AND tutee_email = #{tuteeEmail}
            </if>
            <if test="tutorEmail != null">
                AND tutor_email = #{tutorEmail}
            </if>
        </where>
    </delete>

    <select id="getTotalNumberEntries" resultType="Integer">
        SELECT COUNT(*)
        FROM tutor_review
        <where>
            <if test="appointmentIdEquals != null">
                AND appointment_id = #{appointmentIdEquals}
            </if>
            <if test="numberStarsGreaterThanOrEquals != null">
                AND number_stars &gt;= #{numberStarsGreaterThanOrEquals}
            </if>
            <if test="numberStarsLessThanOrEquals != null">
                AND number_stars &lt;= #{numberStarsLessThanOrEquals}
            </if>
            <if test="reviewTextContains != null">
                <bind name="reviewTextContainsPattern" value = "'%' + reviewTextContains + '%'" />
                AND LOWER(review_text) LIKE LOWER(#{reviewTextContainsPattern})
            </if>
            <if test="tuteeEmailContains != null">
                <bind name="tuteeEmailContainsPattern" value = "'%' + tuteeEmailContains + '%'" />
                AND LOWER(tutee_email) LIKE LOWER(#{tuteeEmailContainsPattern})
            </if>
            <if test="tutorEmailContains != null">
                <bind name="tutorEmailContainsPattern" value = "'%' + tutorEmailContains + '%'" />
                AND LOWER(tutor_email) LIKE LOWER(#{tutorEmailContainsPattern})
            </if>
        </where>
    </select>

    <select id="getPendingReviews" resultMap="AppointmentResultMap">
        SELECT a.appointment_id,
        a.appointment_size_name,
        a.cancellation_reason,
        a.end_date_time AS end_date_time_value,
        a.is_cancelled,
        a.is_confirmed,
        a.location_name,
        a.start_date_time AS start_date_time_value,
        a.tutee_email AS tutee_email,
        tutee.first_name AS tutee_first_name,
        tutee.last_name AS tutee_last_name,
        tutee.phone_number AS tutee_phone_number,
        tutor.first_name AS tutor_first_name,
        tutor.last_name AS tutor_last_name,
        tutor.phone_number AS tutor_phone_number,
        a.tutor_email AS tutor_email
        FROM appointment AS a
        INNER JOIN tutor ON a.tutor_email = tutor.email
        INNER JOIN tutee ON a.tutee_email = tutee.email
        LEFT JOIN tutor_review ON a.appointment_id = tutor_review.appointment_id
        <where>
            AND tutor_review.appointment_id IS NULL
            AND a.end_date_time &lt; NOW()
            <if test="appointmentIdEquals != null">
                AND a.appointment_id = #{appointmentIdEquals}
            </if>
            <if test="appointmentSizeNameContains != null">
                <bind name="appointmentSizeNameContainsPattern" value = "'%' + appointmentSizeNameContains + '%'" />
                AND LOWER(a.appointment_size_name) LIKE LOWER(#{appointmentSizeNameContainsPattern})
            </if>
            <if test="cancellationReasonContains != null">
                <bind name="cancellationReasonContainsPattern" value = "'%' + cancellationReasonContains + '%'" />
                AND LOWER(a.cancellation_reason) LIKE LOWER(#{cancellationReasonContainsPattern})
            </if>
            <if test="endDateTimeLessThanOrEquals != null">
                <bind name="formatPattern" value = "'%Y-%m-%dT%T'" />
                AND a.end_date_time &lt;= STR_TO_DATE(#{endDateTimeLessThanOrEquals}, #{formatPattern})
            </if>
            <if test="isCancelledEquals != null">
                AND a.is_cancelled = #{isCancelledEquals}
            </if>
            <if test="isConfirmedEquals != null">
                AND a.is_confirmed = #{isConfirmedEquals}
            </if>
            <if test="locationNameInList != null">
                AND a.location_name in
                <foreach item="item" index="index" collection="locationNameInList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tuteeEmailContains != null">
                <bind name="tuteeEmailContainsPattern" value = "'%' + tuteeEmailContains + '%'" />
                AND LOWER(tutee.email) LIKE LOWER(#{tuteeEmailContainsPattern})
            </if>
            <if test="tutorEmailContains != null">
                <bind name="tutorEmailContainsPattern" value = "'%' + tutorEmailContains + '%'" />
                AND LOWER(tutor.email) LIKE LOWER(#{tutorEmailContainsPattern})
            </if>
            <if test="startDateTimeGreaterThanOrEquals != null">
                <bind name="formatPattern" value = "'%Y-%m-%dT%T'" />
                AND a.start_date_time &gt;= STR_TO_DATE(#{startDateTimeGreaterThanOrEquals}, #{formatPattern})
            </if>
        </where>
    </select>
</mapper>